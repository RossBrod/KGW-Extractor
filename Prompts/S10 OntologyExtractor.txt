Create a concise, well-structured, and accurate ontology in Cypher language that captures the key legal categories, issues, and principles relevant to a given case, focusing on the most significant aspects and ensuring proper connectivity within the ontology hierarchy.
Instructions:

1. Identify the main legal categories relevant to the case and create corresponding Category nodes. Connect these nodes to the root node "US Legal System" using the [:INCLUDES] relationship.
Example:
   CREATE (usLegalSystem:Category {name: "US Legal System"})
   CREATE (mainCategory1:Category {name: "Main Category 1"})
   CREATE (usLegalSystem)-[:INCLUDES]->(mainCategory1)
2. Create subcategories as needed and connect them to their parent categories using the [:INCLUDES] relationship.
Example:
   CREATE (subCategory1:Category {name: "Subcategory 1"})
   CREATE (mainCategory1)-[:INCLUDES]->(subCategory1)
4. Connect the case node to the most relevant Category nodes in the ontology using the following relationship types, as appropriate:
   - [:APPLIES]: Connects the case to the legal issues or principles it directly applies.
   - [:INVOLVES]: Links the case to the legal issues or principles it involves.
   - [:AFFIRMS]: Indicates that the case affirms a legal principle.
   - [:CHALLENGES]: Indicates that the case challenges a legal principle.
   - [:EXPANDS]: Indicates that the case expands the scope of a legal principle.
   - [:RESTRICTS]: Indicates that the case restricts the scope of a legal principle.

5. Ensure that all nodes in the ontology are properly connected to the hierarchy. Legal issues should not connect directly to root nodes; they are most commonly level 3 nodes.
6. Review the ontology to ensure that it accurately represents the key legal concepts, principles, and issues relevant to the case. The ontology should be concise, well-structured, and focused on the most significant aspects of the case.
7. Avoid creating overly granular or detailed nodes. The ontology should provide a high-level classification of the legal knowledge in the case, suitable for legal research, decision support, and knowledge management purposes.
8. Ensure that all nodes are properly connected and that there are no hanging nodes (i.e., nodes without a parent). The ontology should have a clean and understandable structure, with clear relationships and hierarchies.
9. Use only one node label: Category. Cases are related to the Category nodes via appropriate relationships as described in step 4.
10. Make sure, and this is the key, there are at least one (or more) links of case1 to some nodes in Ontology (Category)
11. Enclose the Cypher code for creating the nodes and relationships within <CYPHER> </CYPHER> tags.

Important:
Make sure that alieases are made of one word otherwise it brakes Cypher, for example if you have MERGE (bona fideSenioritySystem:Category {name: "Bona Fide Seniority System"}) needs to be: MERGE (bonafideSenioritySystem:Category {name: "Bona Fide Seniority System"})

Good Ontology Example:

MERGE (usLegalSystem:Category {name: "US Legal System"})
MERGE (civilLaw:Category {name: "Civil Law"})
MERGE (usLegalSystem)-[:INCLUDES]->(civilLaw)
MERGE (contractLaw:Category {name: "Contract Law"})
MERGE (civilLaw)-[:INCLUDES]->(contractLaw)
MERGE (expressWarranties:Category {name: "Express Warranties"})
MERGE (contractLaw)-[:INCLUDES]->(expressWarranties)
MERGE (impliedWarranties:Category {name: "Implied Warranties"})
MERGE (contractLaw)-[:INCLUDES]->(impliedWarranties)
MERGE (impliedWarrantyOfMerchantability:Category {name: "Implied Warranty of Merchantability"})
MERGE (impliedWarranties)-[:INCLUDES]->(impliedWarrantyOfMerchantability)
MERGE (breachOfImpliedWarrantyOfMerchantability:Category {name: "Breach of Implied Warranty of Merchantability"})
MERGE (impliedWarrantyOfMerchantability)-[:INCLUDES]->(breachOfImpliedWarrantyOfMerchantability)
MERGE (impliedWarrantyOfFitness:Category {name: "Implied Warranty of Fitness for a Particular Purpose"})
MERGE (impliedWarranties)-[:INCLUDES]->(impliedWarrantyOfFitness)
MERGE (tortLaw:Category {name: "Tort Law"})
MERGE (civilLaw)-[:INCLUDES]->(tortLaw)
MERGE (negligence:Category {name: "Negligence"})
MERGE (tortLaw)-[:INCLUDES]->(negligence)
MERGE (intentionalTorts:Category {name: "Intentional Torts"})
MERGE (tortLaw)-[:INCLUDES]->(intentionalTorts)
MERGE (strictLiability:Category {name: "Strict Liability"})
MERGE (tortLaw)-[:INCLUDES]->(strictLiability)
MERGE (abnormallyDangerousActivities:Category {name: "Abnormally Dangerous Activities"})
MERGE (strictLiability)-[:INCLUDES]->(abnormallyDangerousActivities)
MERGE (animalOwnership:Category {name: "Animal Ownership"})
MERGE (strictLiability)-[:INCLUDES]->(animalOwnership)
MERGE (productsLiability:Category {name: "Products Liability"})
MERGE (strictLiability)-[:INCLUDES]->(productsLiability)
MERGE (manufacturingDefects:Category {name: "Manufacturing Defects"})
MERGE (productsLiability)-[:INCLUDES]->(manufacturingDefects)
MERGE (designDefects:Category {name: "Design Defects"})
MERGE (productsLiability)-[:INCLUDES]->(designDefects)
MERGE (riskUtilityAnalysis:Category {name: "Risk/Utility Analysis"})
MERGE (designDefects)-[:INCLUDES]->(riskUtilityAnalysis)
MERGE (failureToWarn:Category {name: "Failure to Warn (Marketing Defects)"})
MERGE (productsLiability)-[:INCLUDES]->(failureToWarn)
MERGE (case1:Case)
MERGE (merchantability:Category)
MERGE (consumerExpectation:Category)
MERGE (impliedWarranty:Category)
MERGE (strictProductsLiability:Category)
MERGE (case1)-[:INVOLVES]->(merchantability)
MERGE (case1)-[:INVOLVES]->(riskUtilityAnalysis)
MERGE (case1)-[:INVOLVES]->(consumerExpectation)
MERGE (case1)-[:APPLIES]->(impliedWarranty)
MERGE (case1)-[:APPLIES]->(strictProductsLiability)